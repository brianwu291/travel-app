{"version":3,"sources":["constants/index.js","components/SelectCity.js","components/NavBar.js","actions/index.js","utils/index.js","hooks/index.js","components/Spot.js","components/ScenicSpot.js","components/ScenicCitySpot.js","App.js","api/baseApi.js","api/spots/index.js","sagas/watchers/getSpots.js","api/city/index.js","sagas/watchers/getCity.js","sagas/index.js","reducers/spots/index.js","reducers/cities/index.js","reducers/index.js","configureStore.js","index.js"],"names":["COUNTS_PER_PAGE","CITY_NAME_MAPS","臺北市","新北市","桃園市","臺中市","臺南市","高雄市","基隆市","新竹市","新竹縣","苗栗縣","彰化縣","南投縣","雲林縣","嘉義縣","嘉義市","屏東縣","宜蘭縣","花蓮縣","臺東縣","金門縣","澎湖縣","連江縣","cityOptions","Object","keys","map","cityChineseName","cityValue","key","value","text","SelectCity","defaultCityName","history","useHistory","useState","selectCityName","setSelectCityName","useEffect","Select","placeholder","options","onChange","_","selectData","push","NavBar","useRouteMatch","isExact","params","style","position","top","left","width","Segment","Group","horizontal","textAlign","to","lineHeight","cityName","GET_SPOTS_REQUEST","GET_SPOTS_SUCCESS","getSpotsSuccess","spots","totalNumber","skipNumber","type","payload","GET_CITY_REQUEST","GET_CITY_SUCCESS","getCitySuccess","citySpots","useScrollToBottomTrigger","triggerAtFirst","triggerFunction","paramForTriggerFunction","otherTriggerConditions","forceRetriggerCondition","isScrollToBottom","setIsScrollToBottom","lastItemRef","useRef","handleScroll","useCallback","length","every","condition","current","element","rect","getBoundingClientRect","bottom","window","innerHeight","document","documentElement","clientHeight","right","innerWidth","clientWidth","isInViewport","undefined","addEventListener","removeEventListener","bottomElementRef","Spot","refsForLastItem","Name","Description","DescriptionDetail","ref","role","className","List","Icon","name","Content","Header","as","Divider","memo","ScenicSpot","currentPage","useSelector","state","get","isFetchingSpots","isFetchingDone","dispatch","useDispatch","handleGetSpots","getSpotsRequest","Container","marginTop","index","that","ID","height","Loader","active","inline","ScenicCitySpot","isFetchingCitySpots","preCityName","usePrevious","handleGetCitySpots","getCityRequest","App","exact","path","match","render","baseApi","method","headers","body","newHeaders","formatBody","JSON","stringify","timeout","fullUrl","fetch","then","response","json","resp","status","data","ok","Promise","resolve","reject","a","newTotal","newSkip","getSpotsSaga","watchGetSpotsSaga","action","call","put","takeEvery","getCitySaga","watchGetCitySaga","root","all","initialState","isFetching","spotsReducer","newSpots","returnSpots","isLastPage","newCurrentPage","Math","floor","concat","reduce","acc","newRes","cityReducer","preCityData","combineReducers","cities","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","run","sagas","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.f37083df.chunk.js","sourcesContent":["export const BASE_URL = 'https://ptx.transportdata.tw/MOTC/v2/Tourism';\n\nexport const COUNTS_PER_PAGE = 30;\n\nexport const CITY_NAME_MAPS = {\n  臺北市: 'Taipei',\n  新北市: 'NewTaipei',\n  桃園市: 'Taoyuan',\n  臺中市: 'Taichung',\n  臺南市: 'Tainan',\n  高雄市: 'Kaohsiung',\n  基隆市: 'Keelung',\n  新竹市: 'Hsinchu',\n  新竹縣: 'HsinchuCounty',\n  苗栗縣: 'MiaoliCounty',\n  彰化縣: 'ChanghuaCounty',\n  南投縣: 'NantouCounty',\n  雲林縣: 'YunlinCounty',\n  嘉義縣: 'ChiayiCounty',\n  嘉義市: 'Chiayi',\n  屏東縣: 'PingtungCounty',\n  宜蘭縣: 'YilanCounty',\n  花蓮縣: 'HualienCounty',\n  臺東縣: 'TaitungCounty',\n  金門縣: 'KinmenCounty',\n  澎湖縣: 'PenghuCounty',\n  連江縣: 'LienchiangCounty',\n}","import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Select } from 'semantic-ui-react'\nimport { CITY_NAME_MAPS } from '../constants'\n\nconst cityOptions = Object.keys(CITY_NAME_MAPS).map(cityChineseName => {\n  const cityValue = CITY_NAME_MAPS[cityChineseName];\n  return ({\n    key: cityValue,\n    value: cityValue,\n    text: cityChineseName,\n  });\n});\n\nconst SelectCity = ({ defaultCityName }) => {\n  const history = useHistory();\n  const [selectCityName, setSelectCityName] = useState(defaultCityName || '');\n  const handlePushToCityPage = (_, selectData) => {\n    setSelectCityName(selectData.value);\n    history.push(`/scenicSpot/${selectData.value}`);\n  }\n  useEffect(() => {\n    if (defaultCityName === null) {\n      setSelectCityName('');\n    }\n  }, [defaultCityName]);\n  return (\n    <Select\n      placeholder='選擇你的城市'\n      options={cityOptions}\n      onChange={handlePushToCityPage}\n      value={selectCityName}\n    />\n  )\n}\n\nexport default SelectCity;\n","import React from 'react';\nimport { NavLink, useRouteMatch } from 'react-router-dom';\nimport { Segment } from 'semantic-ui-react';\nimport SelectCity from './SelectCity';\n\nconst NavBar = () => {\n  const { isExact, params } = useRouteMatch(\"/scenicSpot/:cityName\") || {};\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        top: '-1rem',\n        left: 0,\n        width: '100%',\n      }}\n    >\n      <Segment.Group horizontal>\n        <Segment textAlign='center'>\n          <NavLink\n            to=\"/scenicSpot\"\n          >\n            <div style={{ lineHeight: '38px' }}>首頁</div>\n          </NavLink>\n        </Segment>\n        <Segment textAlign='center'>\n          <SelectCity\n            defaultCityName={isExact ? params?.cityName : null}\n          />\n        </Segment>\n      </Segment.Group>\n    </div>\n  )\n}\n\nexport default NavBar;\n","export const GET_SPOTS_REQUEST = 'GET_SPOTS_REQUEST';\nexport function getSpotsRequest({\n  totalNumber = 30,\n  skipNumber = 0,\n}) {\n  return ({\n    type: GET_SPOTS_REQUEST,\n    payload: {\n      totalNumber,\n      skipNumber,\n    }\n  })\n}\nexport const GET_SPOTS_SUCCESS = 'GET_SPOTS_SUCCESS';\nexport function getSpotsSuccess({\n  spots = [],\n  totalNumber = 30,\n  skipNumber = 0,\n}) {\n  return ({\n    type: GET_SPOTS_SUCCESS,\n    payload: {\n      spots,\n      totalNumber,\n      skipNumber,\n    }\n  });\n}\n\nexport const GET_CITY_REQUEST = 'GET_CITY_REQUEST';\nexport function getCityRequest({\n  totalNumber = 30,\n  skipNumber = 0,\n  cityName = ''\n}) {\n  return ({\n    type: GET_CITY_REQUEST,\n    payload: {\n      totalNumber,\n      skipNumber,\n      cityName,\n    }\n  })\n}\nexport const GET_CITY_SUCCESS = 'GET_CITY_SUCCESS';\n\nexport function getCitySuccess({\n  cityName = '',\n  citySpots = [],\n  totalNumber = 30,\n  skipNumber = 0,\n}) {\n  return ({\n    type: GET_CITY_SUCCESS,\n    payload: {\n      cityName,\n      citySpots,\n      totalNumber,\n      skipNumber,\n    }\n  });\n}\n","export const isInViewport = (element) => {\n  const rect = element.getBoundingClientRect();\n  return (rect.top >= 0\n      && rect.left >= 0\n      && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n  );\n}","import {\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from 'react';\nimport { isInViewport } from '../utils';\n\nexport const useScrollToBottomTrigger = ({\n  triggerAtFirst = true,\n  triggerFunction = () => {},\n  paramForTriggerFunction = {},\n  otherTriggerConditions = [],\n  forceRetriggerCondition = [],\n}) => {\n  const [isScrollToBottom, setIsScrollToBottom] = useState(triggerAtFirst);\n  const lastItemRef = useRef(null);\n  const handleScroll = useCallback(() => {\n    const canTrigger = otherTriggerConditions.length > 0 && otherTriggerConditions.every(condition => condition === true);\n    if (canTrigger && lastItemRef.current) {\n      const isToBottom = isInViewport(lastItemRef.current);\n      if (isToBottom) {\n        setIsScrollToBottom(true);\n      }\n    }\n  }, [otherTriggerConditions])\n  useEffect(() => {\n    const canTrigger = forceRetriggerCondition.length > 0 && forceRetriggerCondition.every(condition => condition === true);\n    if (canTrigger) {\n      setIsScrollToBottom(true);\n    }\n  }, [forceRetriggerCondition])\n  useEffect(() => {\n    if (isScrollToBottom) {\n      triggerFunction(paramForTriggerFunction ? paramForTriggerFunction : undefined);\n      setIsScrollToBottom(false);\n    }\n  }, [isScrollToBottom, triggerFunction, paramForTriggerFunction]);\n  useEffect(() => {\n    document.addEventListener('scroll', handleScroll); \n    return () => {\n      document.removeEventListener('scroll', handleScroll);\n    };\n  }, [handleScroll])\n  return ({\n    bottomElementRef: lastItemRef,\n  })\n}\n\nexport const usePrevious = (value) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}","import React, { memo } from 'react';\nimport { List, Divider } from 'semantic-ui-react'\n\nconst Spot = ({\n  refsForLastItem,\n  Name,\n  Description,\n  DescriptionDetail,\n}) => {\n  return (\n    <div\n      ref={refsForLastItem}\n      role=\"listitem\"\n      className=\"item\"\n    >\n      <List.Icon name='marker' />\n      <List.Content>\n        <List.Header as='a'>\n          {Name}\n        </List.Header>\n        <List.Description>\n          {Description || DescriptionDetail}\n        </List.Description>\n      </List.Content>\n      <Divider />\n    </div>\n  )\n}\n\nexport default memo(Spot);\n","import React, { useCallback } from 'react';\nimport get from 'lodash/get';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Container, List, Loader } from 'semantic-ui-react'\nimport { getSpotsRequest } from '../actions';\nimport { COUNTS_PER_PAGE } from '../constants'\nimport { useScrollToBottomTrigger } from '../hooks';\nimport Spot from './Spot';\n\nconst ScenicSpot = () => {\n  const currentPage = useSelector(state => get(state, 'spots.currentPage', 0));\n  const spots = useSelector(state => get(state, 'spots.spots', []));\n  const isFetchingSpots = useSelector(state => get(state, 'spots.isFetching', false));\n  const isFetchingDone = useSelector(state => get(state, 'spots.isFetchingDone', false));\n  const dispatch = useDispatch();\n  const handleGetSpots = useCallback(() => {\n    dispatch(getSpotsRequest({\n      totalNumber: COUNTS_PER_PAGE,\n      skipNumber: currentPage * COUNTS_PER_PAGE,\n    }))\n  }, [currentPage, dispatch])\n  const { bottomElementRef } = useScrollToBottomTrigger({\n    triggerAtFirst: spots?.length === 0,\n    triggerFunction: handleGetSpots,\n    paramForTriggerFunction: null,\n    otherTriggerConditions: [\n      spots?.length > 0,\n      !isFetchingSpots,\n      !isFetchingDone,\n    ]\n  });\n  return (\n      <Container\n        style={{\n          marginTop: '100px'\n        }}\n      >\n        <List>\n        {spots.map(({\n          ID,\n          Name,\n          Description,\n          DescriptionDetail,\n        }, index, that) => (\n          <Spot\n            key={ID}\n            refsForLastItem={index === that.length - 1 ? bottomElementRef : null}\n            Name={Name}\n            Description={Description}\n            DescriptionDetail={DescriptionDetail}\n          />\n        ))}\n        </List>\n        {isFetchingSpots && (\n          <div style={{ height: 55 }}>\n            <Loader active inline='centered' />\n          </div>\n        )}\n      </Container>\n  )\n}\n\nexport default ScenicSpot;\n","import React, { useCallback } from 'react';\nimport get from 'lodash/get';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Container, List, Loader } from 'semantic-ui-react'\nimport { getCityRequest } from '../actions';\nimport { COUNTS_PER_PAGE } from '../constants'\nimport { useScrollToBottomTrigger, usePrevious } from '../hooks';\nimport Spot from './Spot';\n\nconst ScenicCitySpot = ({\n  cityName\n}) => {\n  const currentPage = useSelector(state => get(state, `cities.${cityName}.currentPage`, 0));\n  const citySpots = useSelector(state => get(state, `cities.${cityName}.citySpots`, []));\n  const isFetchingCitySpots = useSelector(state => get(state, `cities.${cityName}.isFetching`, false));\n  const isFetchingDone = useSelector(state => get(state, `cities.${cityName}.isFetchingDone`, false));\n  const preCityName = usePrevious(cityName);\n  const dispatch = useDispatch();\n  const handleGetCitySpots = useCallback(() => {\n    dispatch(getCityRequest({\n      cityName,\n      totalNumber: COUNTS_PER_PAGE,\n      skipNumber: currentPage * COUNTS_PER_PAGE,\n    }))\n  }, [cityName, currentPage, dispatch])\n  const { bottomElementRef } = useScrollToBottomTrigger({\n    triggerAtFirst: citySpots?.length === 0,\n    triggerFunction: handleGetCitySpots,\n    paramForTriggerFunction: null,\n    otherTriggerConditions: [\n      citySpots?.length > 0,\n      !isFetchingCitySpots,\n      !isFetchingDone,\n    ],\n    forceRetriggerCondition: [\n      citySpots?.length === 0,\n      preCityName !== cityName && !isFetchingDone,\n    ]\n  });\n  return (\n      <Container\n        style={{\n          marginTop: '100px'\n        }}\n      >\n        <List>\n        {citySpots.map(({\n          ID,\n          Name,\n          Description,\n          DescriptionDetail,\n        }, index, that) => (\n          <Spot\n            key={ID}\n            refsForLastItem={index === that.length - 1 ? bottomElementRef : null}\n            Name={Name}\n            Description={Description}\n            DescriptionDetail={DescriptionDetail}\n          />\n        ))}\n        </List>\n        {isFetchingCitySpots && (\n          <div style={{ height: 55 }}>\n            <Loader active inline='centered' />\n          </div>\n        )}\n      </Container>\n  )\n}\n\nexport default ScenicCitySpot;\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport ScenicSpot from './components/ScenicSpot';\nimport ScenicCitySpot from './components/ScenicCitySpot';\n\nfunction App() {\n  const renderRouter = () => {\n    return (\n      <Switch>\n        <Route\n          exact\n          path=\"/scenicSpot\"\n        >\n          <ScenicSpot />\n        </Route>\n        <Route\n          path=\"/scenicSpot/:cityName\"\n        >\n          {({ match }) => {\n            const { cityName } = match.params;\n            return (\n              <ScenicCitySpot\n                cityName={cityName}\n              />\n            )\n          }}\n        </Route>\n        <Route exact path=\"/\" render={() => <Redirect to=\"/scenicSpot\" />} />\n      </Switch>\n    )\n  }\n  return (\n    <>\n      <NavBar />\n      {renderRouter()}\n    </>\n  );\n}\n\nexport default App;\n","import { BASE_URL } from '../constants';\n\nfunction baseApi({\n  path,\n  method = 'GET',\n  headers,\n  body\n}) {\n  let newHeaders = headers;\n  if (!newHeaders) {\n    newHeaders = {};\n  }\n  const formatBody =\n    !newHeaders || newHeaders['Content-Type'] !== 'application/json' ? body : JSON.stringify(body);\n  const params = {\n    method: !method ? 'GET' : method,\n    timeout: 120000\n  };\n  if (newHeaders) {\n    params.headers = newHeaders;\n  }\n  if (formatBody) {\n    params.body = formatBody;\n  }\n  const fullUrl = `${BASE_URL}${path}`;\n  return fetch(fullUrl, params).then(response =>\n    response.json().then(json => {\n      const resp = { status: response.status, data: json };\n      return response.ok ? Promise.resolve(resp) : Promise.reject(resp);\n    })\n  );\n}\n\nexport default baseApi;\n","import baseApi from '../baseApi';\n\nexport async function getSpotsRequest({\n  totalNumber = 30,\n  skipNumber = 0,\n}) {\n  const response = await baseApi({\n    path: `/ScenicSpot/?$top=${totalNumber}&$skip=${skipNumber}&$format=JSON`,\n    method: 'GET',\n  });\n  const { data } = response;\n  return ({\n    spots: data,\n    newTotal: totalNumber,\n    newSkip: skipNumber + totalNumber,\n  });\n}\n\n","import { put, takeEvery, call } from 'redux-saga/effects';\nimport get from 'lodash/get';\nimport {\n  getSpotsSuccess,\n  GET_SPOTS_REQUEST,\n} from '../../actions';\nimport {\n  getSpotsRequest\n} from '../../api/spots';\n\nfunction* getSpotsSaga(action) {\n  const {\n    totalNumber,\n    skipNumber,\n  } = get(action, 'payload', {});\n  const { spots, newTotal, newSkip } = yield call(getSpotsRequest, {\n    totalNumber,\n    skipNumber,\n  });\n  yield put(getSpotsSuccess({\n    spots,\n    totalNumber: newTotal,\n    skipNumber: newSkip,\n  }));\n}\n\nexport default function* watchGetSpotsSaga() {\n  yield takeEvery(GET_SPOTS_REQUEST, getSpotsSaga);\n}","import baseApi from '../baseApi';\n\nexport async function getCityRequest({\n  cityName = '',\n  totalNumber = 30,\n  skipNumber = 0,\n}) {\n  const response = await baseApi({\n    path: `/ScenicSpot/${cityName}?$top=${totalNumber}&$skip=${skipNumber}&$format=JSON`,\n    method: 'GET',\n  });\n  const { data } = response;\n  return ({\n    citySpots: data,\n    newTotal: totalNumber,\n    newSkip: skipNumber + totalNumber,\n  });\n}\n\n","import { put, takeEvery, call } from 'redux-saga/effects';\nimport get from 'lodash/get';\nimport {\n  getCitySuccess,\n  GET_CITY_REQUEST,\n} from '../../actions';\nimport { getCityRequest } from '../../api/city';\n\nfunction* getCitySaga(action) {\n  const {\n    cityName,\n    totalNumber,\n    skipNumber,\n  } = get(action, 'payload', {});\n  const { citySpots, newTotal, newSkip } = yield call(getCityRequest, {\n    cityName,\n    totalNumber,\n    skipNumber,\n  });\n  yield put(getCitySuccess({\n    cityName,\n    citySpots,\n    totalNumber: newTotal,\n    skipNumber: newSkip,\n  }));\n}\n\nexport default function* watchGetCitySaga() {\n  yield takeEvery(GET_CITY_REQUEST, getCitySaga);\n}","import { all } from 'redux-saga/effects';\nimport watchGetSpotsSaga from './watchers/getSpots';\nimport watchGetCitySaga from './watchers/getCity';\n\nexport default function* root() {\n  yield all([\n    watchGetSpotsSaga(),\n    watchGetCitySaga(),\n  ]);\n}","import get from 'lodash/get';\nimport { COUNTS_PER_PAGE } from '../../constants';\nimport {\n  GET_SPOTS_REQUEST,\n  GET_SPOTS_SUCCESS,\n} from '../../actions';\n\nconst initialState = {\n  spots: [],\n  currentPage: 0,\n  isFetching: false,\n  isFetchingDone: false,\n};\n\nfunction spotsReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_SPOTS_REQUEST:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case GET_SPOTS_SUCCESS: {\n      const newSpots = [...state.spots];\n      const returnSpots = get(action, 'payload.spots', []);\n      const isLastPage = returnSpots?.length === 0;\n      const skipNumber = get(action, 'payload.skipNumber', 0);\n      const newCurrentPage = Math.floor(skipNumber / COUNTS_PER_PAGE);\n      return ({\n        isFetching: false,\n        isFetchingDone: isLastPage,\n        spots: newSpots.concat(returnSpots),\n        currentPage: isLastPage ? state.currentPage : newCurrentPage,\n\n      })\n    }      \n    default:\n      return state;\n  }\n}\n\nexport default spotsReducer\n","import get from 'lodash/get';\nimport { COUNTS_PER_PAGE, CITY_NAME_MAPS } from '../../constants';\nimport {\n  GET_CITY_REQUEST,\n  GET_CITY_SUCCESS,\n} from '../../actions';\n\nconst initialState = Object.keys(CITY_NAME_MAPS)\n  .reduce((acc, cityChineseName) => {\n    const cityName = CITY_NAME_MAPS[cityChineseName]\n    const newRes = { ...acc };\n    newRes[cityName] = {\n      citySpots: [],\n      currentPage: 0,\n      isFetching: false,\n      isFetchingDone: false,\n    }\n    return newRes;\n  }, {});\n\nfunction cityReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_CITY_REQUEST: {\n      const { cityName } = action?.payload || {};\n      const preCityData = state[cityName] || {};\n      return {\n        ...state,\n        [cityName]: {\n          ...preCityData,\n          isFetching: true,\n        }\n      };\n    }\n    case GET_CITY_SUCCESS: {\n      const {\n        cityName,\n        citySpots,\n        skipNumber,\n      } = action?.payload || {};;\n      const preCityData = state[cityName] || {};\n      const isLastPage = citySpots?.length === 0;\n      const newCurrentPage = Math.floor(skipNumber / COUNTS_PER_PAGE);\n      return ({\n        ...state,\n        [cityName]: {\n          ...preCityData,\n          citySpots: get(preCityData, 'citySpots', []).concat(citySpots),\n          currentPage: isLastPage ? preCityData.currentPage : newCurrentPage,\n          isFetching: false,\n          isFetchingDone: isLastPage,\n        }\n      })\n    }      \n    default:\n      return state;\n  }\n}\n\nexport default cityReducer\n","import { combineReducers } from 'redux';\nimport spotsReducer from './spots';\nimport cityReducer from './cities';\n\nexport default combineReducers({\n  spots: spotsReducer,\n  cities: cityReducer\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport sagas from './sagas';\nimport rootReducer from './reducers';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware)) \n);\nsagaMiddleware.run(sagas);\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App';\nimport store from './configureStore';\n\nReactDOM.render(\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}